## Sets the Elastic IP used in KubeVIP
# kubevip:
#   eip: "192.168.1.110"
#   # Specify a manifest URL for KubeVIP. Empty uses default
#   manifest_url: ""
#   # Enables KubeVIP
#   enable: true
#   # Specifies a KubeVIP Interface
#   interface: "ens18"

# p2p:
#   # role: "" # Set an hardcoded role, optional
#   # Disabling DHT makes co-ordination to discover nodes only in the local network
#   disable_dht: false #Enabled by default
#   # Configures a VPN for the cluster nodes
#   vpn:
#     create: false # defaults to true
#     use: false # defaults to true
#     # env:
#     #   .....
#   # Automatic cluster deployment configuration
#   auto:
#     # Enables Automatic node configuration (self-coordination)
#     # for role assignment
#     enable: false
#     # HA enables automatic HA roles assignment.
#     # A master cluster init is always required,
#     # Any additional master_node is configured as part of the 
#     # HA control plane.
#     # If auto is disabled, HA has no effect.
#     ha:
#       # Enables HA control-plane
#       enable: true
#       # Number of HA additional master nodes.
#       # A master node is always required for creating the cluster and is implied.
#       # The setting below adds 2 additional master nodes, for a total of 3.
#       master_nodes: 2
#       # Use an External database for the HA control plane
#       # external_db: "external-db-string"
#   # network_token is the shared secret used by the nodes to co-ordinate with p2p
#   network_token: "YOUR_TOKEN_GOES_HERE"

install:
  auto: true
  reboot: true
  device: auto
  bundles:
  - rootfs_path: /usr/local/lib/extensions/tailscale
    targets:
    - container://ghcr.io/jtcressy-home/infra/kairos-extension-tailscale:1.34.2-kairos.v1.4.0

# k3s:
#   enabled: false
# k3s-agent:
#   enabled: false

stages:
  boot:
    - files:
      - path: /etc/tailscale/up-args.sh
        permissions: 0755
        owner: root
        content: |
          #!/bin/sh
          echo "--reset"
          echo "--ssh"
          echo "--accept-dns"
          echo "--accept-routes"
          if [ -d /sys/devices/virtual/net/cni0 ];
          then
            echo "--advertise-routes $(ip route | grep src | grep cni0 | awk '{print $1}'),10.43.0.0/16"
          fi
          if [ -f /boot/firmware/tailscale-authkey ];
          then
            echo "--auth-key file:/boot/firmware/tailscale-authkey"
          else
            echo "--qr"
          fi
      - path: /etc/systemd/system/tailscale-up.service
        permissions: 0644
        owner: root
        content: |
          [Unit]
          Description=Keeps tailscale alive, logged in and configured
          After=tailscaled.service
          Requires=tailscaled.service

          [Service]
          ExecStart=/bin/bash -c "while true; do tailscale up `/etc/tailscale/up-args.sh`; sleep 5; done"
          Restart=always
          RestartSec=15s
          User=root
          KillMode=process
          IgnoreSIGPIPE=no
          SendSIGHUP=yes

          [Install]
          WantedBy=multi-user.target
      - path: /etc/systemd/system/getty@tty1.service.d/override.conf
        permissions: 0644
        owner: root
        content: |
          [Service]
          ExecStart=
          ExecStart=-/bin/bash -c "while true; do clear; tailscale status; (tailscale status --json | jq -r '.AuthURL' | qrencode -t ANSI); sleep 5; done;"
          StandardInput=tty
          StandardOutput=tty
    - name: enable services
      commands:
        - 'systemctl daemon-reload'
        - 'systemctl enable --now tailscale-up.service'
        - 'systemctl restart getty@tty1.service'
  initramfs:
    - name: "Setup hostname"
      hostname: "node-{{ trunc 4 .MachineID }}"
    - name: "Set user and password"
      users:
        kairos:
          passwd: "kairos"
          groups:
          - "admin"
          shell: /bin/bash
          homedir: "/home/kairos"
  network:
    - name: "Set user ssh keys"
      authorized_keys:
        kairos:
          - github:jtcressy