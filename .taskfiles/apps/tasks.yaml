---
version: "3"

.select-project: &select-project
  sh: |
    ls {{.PROJECT_DIR}}/kubernetes/argocd/projects | sed 's/.yaml//g' | fzf --height=~5 --prompt="Select ArgoCD App Project: "

.select-namespace: &select-namespace
  sh: | # depends on project variable
    ls {{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/ | fzf --height=~5 --prompt="Select Namespace: "

.select-app: &select-app
  sh: | # depends on project,namespace variables
    ls {{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/ | fzf --height=~5 --prompt="Select App: "

.select-cluster: &select-cluster
  sh: | # auto-selects (skip prompt) if there's only one cluster
    ls {{.PROJECT_DIR}}/kubernetes/clusters | fzf -1 --height=~5 --prompt="Choose a cluster: " | tr -d '\n\r'

.app-overlay-vars: &app-overlay-vars
  project: *select-project
  namespace: *select-namespace
  app: *select-app
  cluster: *select-cluster
  enabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/clusters/{{.cluster}}"
  disabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/disabled/{{.cluster}}"
  allClusters: |
    {{.allClusters | default "false"}}

.project-vars: &project-vars
  project: *select-project


tasks:
  default:
    silent: true
    cmds:
      - task -l

  overlay:create:
    desc: "Create a new app overlay"
    requires:
      vars: [app, namespace]
    vars:
      project: *select-project
      cluster: *select-cluster
      path: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/clusters/{{.cluster}}"
      allClusters: |
        {{.allClusters | default "false"}}
      app: |
        {{.app}}
      namespace: |
        {{.namespace}}
    interactive: true
    generates:
      - "{{.path}}/kustomization.yaml"
    cmds:
      - mkdir -p "{{.path}}"
      - |
        pushd "{{.path}}"
        kustomize create
      - echo "Created overlay at {{.path}}"
    # preconditions:
    #   - sh: "test -f {{.PROJECT_DIR}}/kubernetes/argocd/projects/{{.project}}.yaml"
    #     msg: "ArgoCD App Project doesn't exist"
    #   - sh: "echo TODO - check if namespace whitelisted in ArgoCD App Project"
    #     msg: "Namespace not allowed in ArgoCD App Project"

  overlay:enable:
    desc: "Enable an app overlay"
    vars:
      project: *select-project
      namespace: *select-namespace
      app: *select-app
      cluster: *select-cluster
      enabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/clusters/"
      disabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/disabled/"
    interactive: true
    cmds:
      - mkdir -p {{.enabledPath}}
      - mv {{.disabledPath}}/{{.cluster}} {{.enabledPath}}/{{.cluster}}
    prereqs:
      - sh: "test -d {{.disabledPath}}"
        msg: "Overlay doesn't exist or isn't disabled"

  overlay:disable:
    desc: "Disable an app overlay"
    vars:
      project: *select-project
      namespace: *select-namespace
      app: *select-app
      cluster: *select-cluster
      enabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/clusters"
      disabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/disabled"
    interactive: true
    cmds:
      - mkdir -p {{.disabledPath}}
      - mv {{.enabledPath}}/{{.cluster}} {{.disabledPath}}/{{.cluster}}
    prereqs:
      - sh: "test -d {{.enabledPath}}"
        msg: "Overlay doesn't exist or isn't enabled"

  overlay:render:
    desc: "Render the kustomization.yaml for an app overlay"
    silent: true
    vars:
      project: *select-project
      namespace: *select-namespace
      app: *select-app
      cluster: *select-cluster
      enabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/clusters"
      disabledPath: "{{.PROJECT_DIR}}/kubernetes/deploy/{{.project}}/{{.namespace}}/{{.app}}/disabled"
      isDisabled:
        sh: "test -d {{.disabledPath}}/{{.cluster}} && echo true || echo false"
    interactive: true
    cmds:
      - kustomize build --enable-helm {{if eq .isDisabled "true"}}{{.disabledPath}}{{else}}{{.enabledPath}}{{end}}/{{.cluster}} | less

  project:create:
    desc: "Create a new ArgoCD App Project"

  project:add-namespace:
    desc: "Add a namespace to an ArgoCD App Project whitelist"

  project:remove-namespace:
    desc: "Remove a namespace from an ArgoCD App Project whitelist"
  