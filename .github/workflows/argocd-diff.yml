name: ArgoCD Diff

on:
  pull_request:
    branches:
      - main

jobs:
  argocd-diff:
    name: Generate ArgoCD Diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ghactions
          # renovate: datasource=github-releases depName=tailscale/tailscale
          version: 1.60.1

      - uses: clowdhaus/argo-cd-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # renovate: datasource=github-releases depName=argoproj/argo-cd
          version: 2.10.2
          command: version
          options: --grpc-web --auth-token ${{ secrets.ARGOCD_TOKEN }} --server argocd.tailnet-4d89.ts.net

      - uses: actions/github-script@v7
        id: diffs
        env:
          ARGOCD_SERVER: argocd.tailnet-4d89.ts.net
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
          ARGOCD_OPTS: --grpc-web
        with:
          script: |
            let APPS = '';
            const options = {
              listeners: {
                stdout: (data) => {
                  APPS += data.toString();
                }
              }
            };
            await exec.exec('argocd', ['app', 'list', '-o', 'name'], options);
            
            const appNames = APPS.split('\n').filter(Boolean);
            console.log(`Found ${appNames.length} apps: ${appNames.join(', ')}`);
            const prBranch = process.env.GITHUB_REF.replace('refs/heads/', '');
            // For each appName, run argocd diff with current PR branch as the --revision
            // and store the diff output in a string array
            const diffOutputs = {};
            await appNames.forEach(async (appName) => {
              const output = await runArgocdDiff(appName, prBranch);
              diffOutputs[appName] = `<details>
                <summary>${appName}</summary>
                \`\`\`diff
                ${output}
                \`\`\`
              </details>`;
            });

            // Helper function to run argocd diff and return the output
            function runArgocdDiff(appName, revision) {

              let diffOutput = '';
              const options = {
                listeners: {
                  stdout: (data) => {
                    diffOutput += data.toString();
                  },
                  stderr: (data) => {
                    console.error(data.toString());
                  }
                }
              };

              const args = ['app', 'diff', appName, '--revision', revision, '--exit-code=false', '--refresh'];

              return exec.exec('argocd', args, options)
                .then(() => diffOutput)
                .catch((error) => {
                  console.error(`Failed to run argocd diff for ${appName}: ${error}`);
                  return '';
                });
            }
            console.log(`Found ${Object.keys(diffOutputs).length} diffs`);
            // Return diffOutputs as a plain string, with each entry separated by two newlines
            return Object.values(diffOutputs).join('\n\n');
          result-encoding: string
      - name: Post diff in comment
        uses: mshick/add-pr-comment@v2
        with:
          message-id: argocd-diff
          message: |
            ## ArgoCD Diff
            
            ${{ steps.diffs.outputs.result }}
