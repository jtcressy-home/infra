name: Kairos Register
on:
  workflow_dispatch:
    inputs:
      token:
        description: 'Registration token decoded from a Kairos Registration QR Code'
        required: true
        type: string
      k8s_role:
        description: 'Kubernetes node role to apply during registration. Options are "init", "controlplane" or "worker"'
        type: choice
        options:
        - init
        - controlplane
        - worker
        default: worker
      vpn_role:
        description: 'VPN node role to apply during registration. Recommended to keep as "worker", but can choose "master"'
        type: choice
        options:
        - master
        - worker
        default: worker
      device:
        description: 'Linux storage device to install Kairos OS to (e.g. /dev/sda)'
        required: true
        type: string
        default: /dev/sda

jobs:
  register:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Kairos CLI
      run: |
        curl -L https://github.com/kairos-io/provider-kairos/releases/download/v1.2.0/kairos-cli-v1.2.0-Linux-x86_64.tar.gz -o - | tar -xvzf - -C .
        mv ./kairos-cli /usr/local/bin/kairos
    - name: Install yq
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
    - name: add mask for registration token input
      env:
        TOKEN: ${{ github.event.inputs.token }}
      run: |
        echo "::add-mask::$TOKEN"
    - name: Inject network_token into config.yml
      run: yq -i '.kairos.network_token = "${{ secrets.KAIROS_NETWORK_TOKEN }}"' 'edgenodes/kairos/config.yml'
    - name: Inject cluster_token into config.yml
      run: yq -i '.cluster.cluster_token = "${{ secrets.KAIROS_CLUSTER_TOKEN }}"' 'edgenodes/kairos/config.yml'
    
    - name: Set options for node vpn role "master"
      if: github.event.inputs.vpn_role == 'master'
      run: |
        yq -i '.kairos.role = "master"' edgenodes/kairos/config.yml
    - name: Set options for node vpn role "worker"
      if: github.event.inputs.vpn_role == 'worker'
      run: |
        yq -i '.kairos.role = "worker"' edgenodes/kairos/config.yml
        
    - name: Set options for cluster node role "worker"
      if: github.event.inputs.k8s_role == 'worker'
      run: |
        yq -i '.cluster.role = "worker"'
        yq -i '.k3s-agent.enabled = true' edgenodes/kairos/config.yml

    - name: Set options for cluster node role "controlplane" or "init"
      if: github.event.inputs.k8s_role == 'controlplane' || github.event.inputs.k8s_role == 'init'
      run: |
        yq -i '.k3s.enabled = true' edgenodes/kairos/config.yml
        yq -i '.cluster.role = "${{ github.event.inputs.k8s_role }}"' edgenodes/kairos/config.yml
        
    - name: Register edge node
      env:
        TOKEN: ${{ github.event.inputs.token }}
      run: |
        kairos register --reboot --device ${{ github.event.inputs.device }} --config edgenodes/kairos/config.yml $TOKEN