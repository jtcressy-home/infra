name: FluxCD Auto Updater

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  collect-clusters:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.content.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: get content
        id: content
        run: |
          CLUSTERS=$(find gitops/clusters -iname 'gotk-components.yaml' | jq --slurp --raw-input 'split("\n")[:-1]' | jq '
            {
              "include": (
                map(
                  {
                    ("file"): .,
                    "location": (split("/")[2]),
                    "name": (split("/")[3]),
                  }
                )
              )
            }
          ')
          echo $CLUSTERS
          echo ::set-output name=matrix::${CLUSTERS}

  update-flux:
    runs-on: ubuntu-latest
    needs: [collect-clusters]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.collect-clusters.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
    - name: Check for Updates
      id: update
      run: |
        echo "location: ${{ matrix.location }}"
        echo "cluster: ${{ matrix.name }}"
        FULL_VERSION="$(flux -v)"
        flux install --export > ${{ matrix.file }}
        IFS=' '
        read -a split_version <<< "$FULL_VERSION"
        echo "::set-output name=flux_version::${split_version[2]}"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: update-flux
        commit-message: Update flux components to ${{ steps.update.outputs.flux_version }}
        title: Update flux components to ${{ steps.update.outputs.flux_version }}
        body: |
          Flux Incoming Version: ${{ steps.update.outputs.flux_version }}
          Location: `${{ matrix.location }}`
          Cluster: `${{ matrix.name }}`