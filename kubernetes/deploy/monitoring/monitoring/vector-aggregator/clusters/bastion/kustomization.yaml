apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

helmCharts:
- name: vector
  repo: https://helm.vector.dev
  version: 0.36.1
  releaseName: &app vector-aggregator
  namespace: monitoring
  valuesInline:
    role: Stateless-Aggregator
    replicas: 3
    service:
      type: LoadBalancer
      # annotations:
      #   external-dns.alpha.kubernetes.io/hostname: "vector.home.arpa"
      externalTrafficPolicy: Cluster
    podMonitor:
      enabled: true
    customConfig:
      data_dir: /vector-data-dir
      api:
        enabled: true
        address: 0.0.0.0:8686
        playground: true
      sources:
        internal_metrics:
          type: internal_metrics
          
        kubernetes_logs:
          address: 0.0.0.0:6000
          type: vector
          version: "2"

        talos_kernel_logs:
          address: 0.0.0.0:6001
          type: socket
          mode: udp
          max_length: 102400
          decoding:
            codec: json
          host_key: __host

        talos_service_logs:
          address: 0.0.0.0:6002
          type: socket
          mode: udp
          max_length: 102400
          decoding:
            codec: json
          host_key: __host

        unifi_kernel_logs:
          address: 0.0.0.0:6003
          type: syslog
          mode: udp
          max_length: 102400
      transforms:
        kubernetes_transform:
          type: remap
          inputs:
            - kubernetes_logs
          source: |-
            .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"

        # talos_kernel_transform:
        #   type: remap
        #   inputs:
        #     - talos_kernel_logs
        #   source: |-
        #     r1 = replace!(.__host, "192.168.10.10", "m0")
        #     r2 = replace(r1, "192.168.10.11", "m1")
        #     r3 = replace(r2, "192.168.10.12", "m2")
        #     .node = r3

        # talos_service_transform:
        #   type: remap
        #   inputs:
        #     - talos_service_logs
        #   source: |-
        #     r1 = replace!(.__host, "192.168.10.10", "m0")
        #     r2 = replace(r1, "192.168.10.11", "m1")
        #     r3 = replace(r2, "192.168.10.12", "m2")
        #     .node = r3

        unifi_kernel_transform:
          type: remap
          inputs:
            - unifi_kernel_logs
          source: |-
            . |= parse_syslog!(.message)
      sinks:
        prom_exporter:
          type: prometheus_exporter
          inputs: [internal_metrics]
          address: 0.0.0.0:9090

        console:
          type: console
          inputs:
            - unifi_kernel_logs
            - unifi_kernel_transform
          encoding:
            code: json
            json:
              pretty: true

        kubernetes:
          type: loki
          inputs:
            - kubernetes_transform
          endpoint: "http://victoria-logs.monitoring.svc.cluster.local:9428/insert/loki/"
          compression: gzip
          path: /api/v1/push?_msg_field=message.message&_time_field=timestamp&_stream_fields=source
          encoding:
            codec: json
          batch:
            max_bytes: 524288
          out_of_order_action: rewrite_timestamp
          remove_label_fields: true
          remove_timestamp: true
          labels:
            app: "{{`{{ custom_app_name }}`}}"
            container: "{{`{{ container_name }}`}}"
            namespace: "{{`{{ kubernetes.pod_namespace }}`}}"
            node: "{{`{{ kubernetes.pod_node_name }}`}}"

        talos_kernel:
          type: loki
          inputs:
            # - talos_kernel_transform
            - talos_kernel_logs
          endpoint: "http://victoria-logs.monitoring.svc.cluster.local:9428/insert/loki/"
          compression: gzip
          path: /api/v1/push?_msg_field=message.message&_time_field=timestamp&_stream_fields=source
          encoding:
            codec: json
            # except_fields:
            #   - __host
          batch:
            max_bytes: 524288
          out_of_order_action: rewrite_timestamp
          labels:
            node: "{{`{{ node }}`}}"
            facility: "{{`{{ facility }}`}}"
            namespace: "talos:kernel"

        talos_service:
          type: loki
          inputs:
            # - talos_service_transform
            - talos_service_logs
          endpoint: "http://victoria-logs.monitoring.svc.cluster.local:9428/insert/loki/"
          compression: gzip
          path: /api/v1/push?_msg_field=message.message&_time_field=timestamp&_stream_fields=source
          encoding:
            codec: json
            # except_fields:
            #   - __host
          batch:
            max_bytes: 524288
          out_of_order_action: rewrite_timestamp
          labels:
            node: "{{`{{ node }}`}}"
            talos_service: '{{`{{ "talos-service" }}`}}'
            namespace: "talos:service"

        unifi_kernel:
          type: loki
          inputs:
            - unifi_kernel_transform
          endpoint: "http://victoria-logs.monitoring.svc.cluster.local:9428/insert/loki/"
          compression: gzip
          path: /api/v1/push?_msg_field=message&_time_field=timestamp&_stream_fields=appname,facility,hostname
          encoding:
            codec: json
          batch:
            max_bytes: 524288
          out_of_order_action: rewrite_timestamp
          labels:
            node: "{{`{{ host }}`}}"
            facility: "{{`{{ facility }}`}}"
            namespace: "unifi:kernel"

patches: # apply hostname to LB service, NOT HEADLESS SERVICE.
- target:
    group: ""
    version: v1
    kind: Service
    name: *app
  patch: |-
    - op: add
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: "vector.home.arpa"
