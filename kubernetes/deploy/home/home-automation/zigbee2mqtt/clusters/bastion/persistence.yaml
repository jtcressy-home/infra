---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zigbee2mqtt-pvc
spec:
  storageClassName: cephfs
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  dataSourceRef:
    apiGroup: "volsync.backube"
    kind: "ReplicationDestination"
    name: "zigbee2mqtt-data-bootstrap"
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: "zigbee2mqtt-data-bootstrap"
spec:
  trigger:
    manual: "restore-once-bootstrap"
  restic:
    repository: "zigbee2mqtt-restic-secret"
    copyMethod: "Snapshot"
    storageClassName: "cephfs"
    cacheStorageClassName: "cephfs"
    volumeSnapshotClassName: cephfs-snapshot
    capacity: "1Gi"
    accessModes: ["ReadWriteOnce"]
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zigbee2mqtt-restic
  namespace: home-automation
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: zigbee2mqtt-restic-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        RESTIC_REPOSITORY: "{{ .REPOSITORY_TEMPLATE }}/zigbee2mqtt"
        RESTIC_PASSWORD: "{{ .RESTIC_PASSWORD }}"
        AWS_ACCESS_KEY_ID: "{{ .AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "{{ .AWS_SECRET_ACCESS_KEY }}"
  dataFrom:
    - extract:
        key: volsync-restic-template
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: zigbee2mqtt
  namespace: home-automation
spec:
  sourcePVC: zigbee2mqtt-pvc
  trigger:
    schedule: "0 */12 * * *" # every 12 hours
  restic:
    copyMethod: Clone
    pruneIntervalDays: 14
    repository: zigbee2mqtt-restic-secret
    retain:
      hourly: 6
      daily: 5
      weekly: 4
      monthly: 2
      yearly: 1
    moverSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    cacheStorageClassName: cephfs
    storageClassName: cephfs